# Christmas Capatcha 
# http://adventofcode.com/2017/day/1
test1 = 1122
test2 = 1111
test3 = 1234
test4 = 91212129
capatchaInput

def sumConseutiveNumbers(inputNumber):
    outputSum = 0

    # Cast to string to process in python easier 
    inputString = str(inputNumber)

    # Default state
    previousItem = ''

    # Initial state, '' = a number so we always set the previous item to the first item
    # then we only care about previous and current number
    for i in inputString:
        if i == previousItem:
            outputSum += int(i)    
        previousItem = i    

    # Account for circular case at the end
    if inputString[0] == inputString[-1]:
        outputSum += int(inputString[0])
    return outputSum

# print sumConseutiveNumbers(capatchaInput)

# Curve ball case
testb1 = 1212
testb2 = 1221
testb3 = 123425
testb4 = 123123
testb5 = 12131415

def sumHalfCircularNumbers(inputNumber):
    outputSum = 0
    inputString = str(inputNumber)
    inputStringLen = len(inputString)

    firstHalfInput = inputString[inputStringLen/2:]
    secondHalfInput = inputString[:inputStringLen/2]

    for i in range(0, len(firstHalfInput)):
        if firstHalfInput[i] == secondHalfInput[i]:
            outputSum += int(firstHalfInput[i])

    # Value doubles since second half is the same as first half
    # in circular list
    outputSum += outputSum
    return outputSum

print sumHalfCircularNumbers(capatchaInput)
